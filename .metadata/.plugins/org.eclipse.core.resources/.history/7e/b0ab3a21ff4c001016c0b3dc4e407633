package com.sample;

import java.sql.SQLException;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.core.env.ConfigurableEnvironment;

import com.sample.Dao.ProductDaoImpl;

public class App {
	public static void main(String[] args) throws BeansException, ClassNotFoundException, SQLException {
		 AnnotationConfigApplicationContext container = new AnnotationConfigApplicationContext();
		    ConfigurableEnvironment environment = container.getEnvironment();
		    
//		    @Profile is a Spring annotation used to indicate that a component is eligible for registration only when a specific profile is active.
//		    We can set Profile  By VM arguments as well as By Container we can activate the Profiles.....and we can do from Maven Profiles also........
//		    As VM arguments ---> Run as-->Arguments --> add arguments Syntax--> "-Dspring.profiles.activate=Postgres , database"  
		    
		    environment.setActiveProfiles("Postgres","first","second","student");
		    container.register(MyConfig.class);
		    container.refresh(); // âœ… refresh after registering and setting profile
		    container.getBean("productDaoImpl", ProductDaoImpl.class).getProducts();
	}
}
